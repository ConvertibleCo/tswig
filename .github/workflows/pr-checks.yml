name: PR Checks

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Run unit and integration tests
        run: pnpm run test:unit && pnpm run test:integration

      - name: Run tests with coverage
        run: pnpm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

      - name: Build package
        run: pnpm run build #this should also prepackage so that the package is ready to be published

      - name: Tar package
        run: tar -czvf lib.tar.gz lib

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: tswig-lib
          path: lib.tar.gz

  e2e:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [ 14.x, 16.x, 18.x, 20.x ]
        typescript-version: [ "3.0.3", "3.1.8", "3.2.4", "3.3.3", "3.4.5", "3.5.3", "3.6.5", "3.7.7", "3.8.3", "3.9.10", "4.0.8", "4.1.6", "4.2.4", "4.3.5", "4.4.4", "4.5.5", "4.6.4", "4.7.4", "4.8.4", "4.9.5", "5.0.4" ]

    steps:
      - uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: tswig-lib

      - name: Extract build artifacts in lib folder
        run: tar -xzvf lib.tar.gz

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Determine PNPM version
        id: pnpm-version
        run: |
          echo "::set-output name=version::$(if [[ "${{ matrix.node-version }}" == "14.x" ]]; then echo "7"; else echo "8"; fi)"

      - uses: pnpm/action-setup@v2
        with:
          version: ${{ steps.pnpm-version.outputs.version }}

      - name: Install dependencies
        run: pnpm install

      - name: Run e2e tests
        env:
          TSWIG_TS_VERSION: ${{ matrix.typescript-version }}
        run: pnpm run test:e2e
